Step 1: Registering Users/Login:

Once Client sends to Server,
{
	Username: {Username},
	Password: {Password}
}

Server creates user and generates "USERID:str" and declares status as Offline

Server returned status:

200 = Ok, Success
409 = Username Taken

then redirected to Login Page,

Here client again send to Server
{
	Username: {Username},
	Password: {Password}
}

Server side codes:

200 = Ok, Success
400 = Invalid User
401 = Password doesn't Match

Server checks details and lets User to Login

Step 2: Load User Details

An Authentication_Token is generated here for the Users session and status is updated to Online

Format in Which the entire Load Details is Sent
{
	SessionId: {UserIds: {
					UserID: Name
				},
				Messages:{
					MessageID: "data", "TimeStamp", "Sender"
				}}
	SessionId2: UserIds: {
					UserID: Name
				},
				Messages:{
					MessageID: "data", "TimeStamp", "Sender"
				}
	...
}



Step 3: Connecting to Web Socket
	


step 4: Messages Sent:

	Sent from client Side as:
		{
			SessionID:{
				Message: "data", "TimeStamp", "Sender"
			}
		}
	


	Sent from Server to Clients as:
		{
			SessionID:{
				MessageID: "data", "TimeStamp", "Sender"
			}
		}

DataBase Schema:
Users
{
	UserID: {USERID},
	Username: {Username},
	Password: {Password},
	Status: {Online/Offline}
}

Sessions
{
	SessionID: {SESSIONID},
	Users: [USERID1, USERID2, ...]
}

Messages
{
	MessageID: {MESSAGEID},
	SessionID: {SESSIONID},
	Data: {Data},
	TimeStamp: {Time},
	SenderID: {USERID}
}



Search:_______________ [Invite]

sent from client to server
{
	type: Search,
	Username: Username
}

server will search for user

case 1: User Exists

Sent from server to the searched user:

{
	type: Search,
	UserName: UserName of the Person wanting to talk to you
}

{
	type: Search,
	Status: Accepted or Rejected
}

case 2: User exists but Offline

{
	type: Search,
	Status: User is offline cannot establish session
}

case 3: User does not exist:

{
	type: Search,
	Status: No User KYS
}

if Accepted:
Create a Session Document in DataBase

Send to both Users
SessionID: {
	Users: ["UserId of the other user": Username]
}